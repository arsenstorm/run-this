name: Auto Tag on Version Change

on:
  push:
    branches:
      - main
    paths:
      - 'Cargo.toml'

permissions:
  contents: write

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version from Cargo.toml
        id: cargo-version
        run: |
          CURRENT_VERSION=$(grep -m 1 'version = ' Cargo.toml | cut -d '"' -f 2)
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Get latest tag
        id: latest-tag
        run: |
          LATEST_TAG=$(git tag -l "v*" --sort=-v:refname | head -n 1 || echo "v0.0.0")
          LATEST_VERSION=${LATEST_TAG#v}
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "Latest tag: $LATEST_TAG (version: $LATEST_VERSION)"

      - name: Compare versions
        id: compare-versions
        run: |
          CURRENT_VERSION="${{ steps.cargo-version.outputs.version }}"
          LATEST_VERSION="${{ steps.latest-tag.outputs.version }}"
          
          # Convert versions to arrays for comparison
          IFS='.' read -ra CURRENT <<< "$CURRENT_VERSION"
          IFS='.' read -ra LATEST <<< "$LATEST_VERSION"
          
          # Compare major version
          if [[ ${CURRENT[0]} -gt ${LATEST[0]} ]]; then
            INCREASED=true
          elif [[ ${CURRENT[0]} -eq ${LATEST[0]} ]]; then
            # Compare minor version
            if [[ ${CURRENT[1]} -gt ${LATEST[1]} ]]; then
              INCREASED=true
            elif [[ ${CURRENT[1]} -eq ${LATEST[1]} ]]; then
              # Compare patch version
              if [[ ${CURRENT[2]} -gt ${LATEST[2]} ]]; then
                INCREASED=true
              else
                INCREASED=false
              fi
            else
              INCREASED=false
            fi
          else
            INCREASED=false
          fi
          
          echo "increased=$INCREASED" >> $GITHUB_OUTPUT
          echo "Version increased: $INCREASED"

      - name: Create and push tag
        if: steps.compare-versions.outputs.increased == 'true'
        run: |
          VERSION=${{ steps.cargo-version.outputs.version }}
          echo "Creating tag v$VERSION"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION" --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release by triggering release workflow
        if: steps.compare-versions.outputs.increased == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-event
          repository: ${{ github.repository }}
